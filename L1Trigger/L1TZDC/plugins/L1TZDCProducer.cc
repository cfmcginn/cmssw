// -*- C++ -*-
//
// Package:    L1Trigger/skeleton
// Class:      skeleton
//
/**\class skeleton skeleton.cc L1Trigger/skeleton/plugins/skeleton.cc

 Description: [one line class summary]

 Implementation:
     [Notes on implementation]
*/
//
// Original Author:  James Brooke
//         Created:  Thu, 05 Dec 2013 17:39:27 GMT
//
// Copied for ZDC by: Chris McGinn
//        Copy Made: Wed, 03 Aug 2023
//        Contact: christopher.mc.ginn@cern.ch or
//                 cfmcginn on github for bugs/issues
//
#include <memory>
#include <iostream>
// user include files


#include "FWCore/Framework/interface/EventSetup.h"
#include "FWCore/Framework/interface/Frameworkfwd.h"
#include "FWCore/Framework/interface/stream/EDProducer.h"
#include "FWCore/Framework/interface/ESHandle.h"
#include "FWCore/Framework/interface/Event.h"
#include "FWCore/Framework/interface/MakerMacros.h"
#include "FWCore/ParameterSet/interface/ParameterSet.h"
#include "FWCore/Utilities/interface/EDGetToken.h"
#include "FWCore/Utilities/interface/EDPutToken.h"
#include "FWCore/Utilities/interface/InputTag.h"
#include "FWCore/Utilities/interface/ESGetToken.h"
#include "FWCore/MessageLogger/interface/MessageLogger.h"

#include "L1Trigger/L1TCalorimeter/interface/Stage2Layer2FirmwareFactory.h"
#include "L1Trigger/L1TCalorimeter/interface/Stage2MainProcessor.h"
#include "L1Trigger/L1TCalorimeter/interface/CaloTools.h"

#include "L1Trigger/L1TCalorimeter/interface/CaloParamsHelper.h"
#include "CondFormats/DataRecord/interface/L1TCaloParamsRcd.h"
#include "CondFormats/DataRecord/interface/L1TCaloParamsO2ORcd.h"

#include "DataFormats/L1TCalorimeter/interface/CaloTower.h"
#include "DataFormats/L1Trigger/interface/EGamma.h"
#include "DataFormats/L1Trigger/interface/Tau.h"
#include "DataFormats/L1Trigger/interface/Jet.h"
#include "DataFormats/L1Trigger/interface/EtSum.h"

#include "DataFormats/HcalDigi/interface/HcalDigiCollections.h"


//
// class declaration
//

using namespace l1t;

class L1TZDCProducer : public edm::stream::EDProducer<> {
public:
  explicit L1TZDCProducer(const edm::ParameterSet& ps);
  ~L1TZDCProducer() override;

  static void fillDescriptions(edm::ConfigurationDescriptions& descriptions);

private:
  void produce(edm::Event&, const edm::EventSetup&) override;

  void beginRun(edm::Run const&, edm::EventSetup const&) override;
  void endRun(edm::Run const&, edm::EventSetup const&) override;

  int zdcLUTIndexHelper(int iDetPos, int iBXPos);  

  //virtual void beginLuminosityBlock(edm::LuminosityBlock const&, edm::EventSetup const&) override;
  //virtual void endLuminosityBlock(edm::LuminosityBlock const&, edm::EventSetup const&) override;

  // ----------member data ---------------------------

  // input tokens
  //2023.08.03: Following example from ginnocen
  //https://github.com/ginnocen/UPCopenHFanalysis/blob/zdc_calibrationcode/zdc_calibration/newZDCAnalyzer/plugins/newZDCAnalyzer.cc
  //Add the ZDC token - remove rest later when more certain what is not needed
  edm::EDGetTokenT<QIE10DigiCollection> m_zdcToken;
  edm::ESGetToken<CaloParams, L1TCaloParamsRcd> m_candidateToken;
 
  // put tokens
  // remove L1TCalorimeter put tokens except the two for ETSums - which we will repurpose
  edm::EDPutTokenT<EtSumBxCollection> m_etToken;
  //  edm::EDPutTokenT<EtSumBxCollection> m_etTokenM;

  //Following the L1TStage2Layer2Producer
  CaloParamsHelper* m_params;
  int m_scaleFactor;

  bool m_doHardCodeLUT;
};

L1TZDCProducer::L1TZDCProducer(const edm::ParameterSet& ps) {

  // register what you produce
  m_etToken = produces<EtSumBxCollection>("zdcEtSums");
  //  m_etTokenM = produces<EtSumBxCollection>("zdcEtSumsM");

  // register what you consume and keep token for later access:
  // CMcGinn: Addition here is the zdcToken - others (tower) kept temporarily
  m_zdcToken = consumes<QIE10DigiCollection>(ps.getParameter<edm::InputTag>("zdcToken"));
  m_candidateToken = esConsumes<CaloParams, L1TCaloParamsRcd, edm::Transition::BeginRun>();

  // placeholder for the parameters
  m_params = new CaloParamsHelper;

  m_doHardCodeLUT  =  ps.getParameter<bool>("doHardCodeLUT");
}

L1TZDCProducer::~L1TZDCProducer() { delete m_params;}

// ------------ method called to produce the data  ------------
void L1TZDCProducer::produce(edm::Event& iEvent, const edm::EventSetup& iSetup) {
  //std::cout<<"-------------------------------- New event ---------------------"<<std::endl;
  using namespace edm;

  using namespace l1t;

  LogDebug("l1t|stage 2") << "L1TZDCProducer::produce function called..." << std::endl;
  // BEGINNING OF OBSOLETE: all these corrections are now already included in QIE10_regular_fC_full
      // cEMHAD is the multiplicative factor that enters the formula to compute the total energy
      // Energy(HAD) + cEMHAD * Energy(EM)
      //const float cEMHAD = 0.2;
      // calibconst[side][detector/channel id]
      // side = 0 -> ZDC minus
      // side = 1 -> ZDC plus
      // detector/channel id -> EM1, EM2, EM3, EM4, EM5, HD1, HD2, HD3, HD4
      // Summary
      // side=0: NEM1, NEM2, NEM3, NEM4, NEM5, NHD1, NHD2, NHD3, NHD4,
      // side=1: PEM1, PEM2, PEM3, PEM4, PEM5, PHD1, PHD2, PHD3, PHD4
      /*
      double calibconst[2][9] = {{0.510403, 1.14888, 1.17357, 0.970406, 0.990911, 1.00, 0.57, 0.37, 0.42},
                                {0.670134, 1.18538, 1.07780, 0.925180, 0.659861, 1.00, 0.64, 0.30, 0.28}};
  
      double const QIE10_regular_fC[256] = {
  	1.62607,
	4.87821,
	8.13035,
	11.3825,
	14.6346,
	17.8868,
	21.1389,
	24.3910,
	27.6432,
	30.8953,
	34.1475,
	37.3996,
	40.6517,
	43.9039,
	47.1560,
	50.4081,
	55.2864,
	61.7906,
	68.2949,
	74.7992,
	81.3035,
	87.8077,
	94.3120,
	100.816,
	107.321,
	113.825,
	120.329,
	126.833,
	133.338,
	139.842,
	146.346,
	152.851,
	159.355,
	165.859,
	172.363,
	178.868,
	188.624,
	201.633,
	214.641,
	227.650,
	240.658,
	253.667,
	266.675,
	279.684,
	292.692,
	305.701,
	318.710,
	331.718,
	344.727,
	357.735,
	370.744,
	383.752,
	396.761,
	409.769,
	422.778,
	435.787,
	448.795,
	468.308,
	494.325,
	520.342,
	546.359,
	572.376,
	598.393,
	624.411,
	568.652,
	594.369,
	620.087,
	645.805,
	671.523,
	697.240,
	722.958,
	748.676,
	774.393,
	800.111,
	825.829,
	851.546,
	877.264,
	902.982,
	928.699,
	954.417,
	992.994,
	1044.43,
	1095.86,
	1147.30,
	1198.73,
	1250.17,
	1301.61,
	1353.04,
	1404.48,
	1455.91,
	1507.35,
	1558.78,
	1610.22,
	1661.65,
	1713.09,
	1764.52,
	1815.96,
	1867.39,
	1918.83,
	1970.27,
	2047.42,
	2150.29,
	2253.16,
	2356.03,
	2458.90,
	2561.77,
	2664.64,
	2767.51,
	2870.38,
	2973.26,
	3076.13,
	3179.00,
	3281.87,
	3384.74,
	3487.61,
	3590.48,
	3693.35,
	3796.22,
	3899.09,
	4001.96,
	4104.83,
	4259.14,
	4464.88,
	4670.62,
	4876.36,
	5082.11,
	5287.85,
	5493.59,
	4996.09,
	5200.82,
	5405.55,
	5610.27,
	5815.00,
	6019.73,
	6224.46,
	6429.19,
	6633.91,
	6838.64,
	7043.37,
	7248.10,
	7452.83,
	7657.55,
	7862.28,
	8067.01,
	8374.10,
	8783.56,
	9193.01,
	9602.47,
	10011.9,
	10421.4,
	10830.8,
	11240.3,
	11649.7,
	12059.2,
	12468.7,
	12878.1,
	13287.6,
	13697.0,
	14106.5,
	14515.9,
	14925.4,
	15334.9,
	15744.3,
	16153.8,
	16767.9,
	17586.9,
	18405.8,
	19224.7,
	20043.6,
	20862.5,
	21681.4,
	22500.3,
	23319.2,
	24138.2,
	24957.1,
	25776.0,
	26594.9,
	27413.8,
	28232.7,
	29051.6,
	29870.5,
	30689.4,
	31508.4,
	32327.3,
	33146.2,
	34374.6,
	36012.4,
	37650.2,
	39288.0,
	40925.8,
	42563.7,
	44201.5,
	41124.8,
	42733.7,
	44342.5,
	45951.4,
	47560.2,
	49169.1,
	50777.9,
	52386.8,
	53995.6,
	55604.4,
	57213.3,
	58822.1,
	60431.0,
	62039.8,
	63648.7,
	65257.5,
	67670.8,
	70888.5,
	74106.2,
	77323.9,
	80541.6,
	83759.3,
	86977.0,
	90194.7,
	93412.4,
	96630.1,
	99847.8,
	103065.,
	106283.,
	109501.,
	112719.,
	115936.,
	119154.,
	122372.,
	125589.,
	128807.,
	133634.,
	140069.,
	146504.,
	152940.,
	159375.,
	165811.,
	172246.,
	178681.,
	185117.,
	191552.,
	197988.,
	204423.,
	210858.,
	217294.,
	223729.,
	230165.,
	236600.,
	243035.,
	249471.,
	255906.,
	262342.,
	271995.,
	284865.,
	297736.,
	310607.,
	323478.,
	336349.,
	349219.};
    */
    // END OF OBSOLETE

// QIE10_regular_fC[adc][ndetectors] allows you to convert an ADC of a given channel into calibrated current for computing the zdcSums
// All the corrections, previously determined by cEMHAD and calibconst are already taken into acccount.  
//NEM1, NEM2, NEM3, NEM4, NEM5, NHD1, NHD2, NHD3, NHD4, PEM1, PEM2, PEM3, PEM4, PEM5, PHD1, PHD2, PHD3, PHD4 
double QIE10_regular_fC_full[256][18]={
	{0.16599,0.373632,0.381661,0.31559,0.322258,1.62607,0.92686,0.601646,0.682949,0.217937,0.385502,0.350516,0.300881,0.214596,1.62607,1.04068,0.487821,0.4553},
	{0.497971,1.1209,1.14498,0.946769,0.966774,4.87821,2.78058,1.80494,2.04885,0.653811,1.15651,1.05155,0.902644,0.643788,4.87821,3.12205,1.46346,1.3659},
	{0.829951,1.86816,1.90831,1.57795,1.61129,8.13035,4.6343,3.00823,3.41475,1.08968,1.92751,1.75258,1.50441,1.07298,8.13035,5.20342,2.43911,2.2765},
	{1.16193,2.61543,2.67163,2.20913,2.25581,11.3825,6.48802,4.21152,4.78065,1.52556,2.69852,2.45361,2.10617,1.50217,11.3825,7.2848,3.41475,3.1871},
	{1.49391,3.36268,3.43495,2.8403,2.90032,14.6346,8.34172,5.4148,6.14653,1.96143,3.46951,3.15463,2.70793,1.93136,14.6346,9.36614,4.39038,4.09769},
	{1.8259,4.10996,4.19828,3.47149,3.54485,17.8868,10.1955,6.61812,7.51246,2.39731,4.24053,3.85568,3.3097,2.36056,17.8868,11.4476,5.36604,5.0083},
	{2.15787,4.85721,4.9616,4.10266,4.18935,21.1389,12.0492,7.82139,8.87834,2.83318,5.01153,4.5567,3.91146,2.78975,21.1389,13.5289,6.34167,5.91889},
	{2.48985,5.60447,5.72491,4.73383,4.83386,24.391,13.9029,9.02467,10.2442,3.26905,5.78252,5.25772,4.51321,3.21893,24.391,15.6102,7.3173,6.82948},
	{2.82183,6.35174,6.48825,5.36503,5.47839,27.6432,15.7566,10.228,11.6101,3.70493,6.55354,5.95877,5.11499,3.64813,27.6432,17.6916,8.29296,7.7401},
	{3.15381,7.099,7.25156,5.9962,6.1229,30.8953,17.6103,11.4313,12.976,4.1408,7.32453,6.65979,5.71674,4.07732,30.8953,19.773,9.26859,8.65068},
	{3.4858,7.84628,8.0149,6.62739,6.76743,34.1475,19.4641,12.6346,14.342,4.57668,8.09555,7.36084,6.31852,4.50652,34.1475,21.8544,10.2442,9.5613},
	{3.81777,8.59353,8.77821,7.25856,7.41194,37.3996,21.3178,13.8379,15.7078,5.01255,8.86655,8.06186,6.92027,4.93571,37.3996,23.9357,11.2199,10.4719},
	{4.14975,9.34079,9.54152,7.88973,8.05644,40.6517,23.1715,15.0411,17.0737,5.44842,9.63754,8.76288,7.52203,5.36489,40.6517,26.0171,12.1955,11.3825},
	{4.48174,10.0881,10.3049,8.52092,8.70097,43.9039,25.0252,16.2444,18.4396,5.8843,10.4086,9.46392,8.1238,5.79409,43.9039,28.0985,13.1712,12.2931},
	{4.81371,10.8353,11.0682,9.15209,9.34548,47.156,26.8789,17.4477,19.8055,6.32017,11.1796,10.1649,8.72556,6.22328,47.156,30.1798,14.1468,13.2037},
	{5.14569,11.5826,11.8315,9.78326,9.98999,50.4081,28.7326,18.651,21.1714,6.75604,11.9506,10.866,9.32731,6.65247,50.4081,32.2612,15.1224,14.1143},
	{5.64367,12.7035,12.9765,10.7301,10.9568,55.2864,31.5132,20.456,23.2203,7.40986,13.1071,11.9175,10.23,7.29627,55.2864,35.3833,16.5859,15.4802},
	{6.30762,14.198,14.5031,11.9924,12.2458,61.7906,35.2206,22.8625,25.9521,8.2816,14.6491,13.3196,11.4335,8.15464,61.7906,39.546,18.5372,17.3014},
	{6.97158,15.6925,16.0298,13.2548,13.5348,68.2949,38.9281,25.2691,28.6839,9.15335,16.1911,14.7216,12.637,9.01303,68.2949,43.7087,20.4885,19.1226},
	{7.63555,17.1871,17.5564,14.5171,14.8239,74.7992,42.6355,27.6757,31.4157,10.0251,17.7331,16.1237,13.8405,9.87142,74.7992,47.8715,22.4398,20.9438},
	{8.29951,18.6816,19.0831,15.7795,16.1129,81.3035,46.343,30.0823,34.1475,10.8968,19.2751,17.5258,15.0441,10.7298,81.3035,52.0342,24.391,22.765},
	{8.96346,20.1761,20.6097,17.0418,17.4019,87.8077,50.0504,32.4888,36.8792,11.7686,20.8171,18.9278,16.2476,11.5882,87.8077,56.1969,26.3423,24.5862},
	{9.62743,21.6706,22.1363,18.3042,18.691,94.312,53.7578,34.8954,39.611,12.6403,22.3591,20.3299,17.4511,12.4466,94.312,60.3597,28.2936,26.4074},
	{10.2914,23.1651,23.6629,19.5665,19.9799,100.816,57.4651,37.3019,42.3427,13.512,23.9011,21.7319,18.6546,13.3049,100.816,64.5222,30.2448,28.2285},
	{10.9554,24.6598,25.1897,20.829,21.2691,107.321,61.173,39.7088,45.0748,14.3839,25.4432,23.1341,19.8582,14.1634,107.321,68.6854,32.1963,30.0499},
	{11.6193,26.1543,26.7163,22.0913,22.5581,113.825,64.8802,42.1153,47.8065,15.2556,26.9852,24.5361,21.0617,15.0217,113.825,72.848,34.1475,31.871},
	{12.2833,27.6487,28.2429,23.3536,23.8471,120.329,68.5875,44.5217,50.5382,16.1273,28.5271,25.9381,22.2652,15.8801,120.329,77.0106,36.0987,33.6921},
	{12.9472,29.1432,29.7695,24.6159,25.136,126.833,72.2948,46.9282,53.2699,16.999,30.0691,27.3401,23.4687,16.7384,126.833,81.1731,38.0499,35.5132},
	{13.6112,30.6379,31.2963,25.8784,26.4252,133.338,76.0027,49.3351,56.002,17.8709,31.6112,28.7423,24.6723,17.5969,133.338,85.3363,40.0014,37.3346},
	{14.2752,32.1323,32.8229,27.1407,27.7142,139.842,79.7099,51.7415,58.7336,18.7426,33.1532,30.1443,25.8758,18.4553,139.842,89.4989,41.9526,39.1558},
	{14.9391,33.6268,34.3495,28.403,29.0032,146.346,83.4172,54.148,61.4653,19.6143,34.6951,31.5463,27.0793,19.3136,146.346,93.6614,43.9038,40.9769},
	{15.6031,35.1215,35.8763,29.6655,30.2923,152.851,87.1251,56.5549,64.1974,20.4861,36.2373,32.9486,28.2829,20.1721,152.851,97.8246,45.8553,42.7983},
	{16.2671,36.616,37.4029,30.9278,31.5813,159.355,90.8323,58.9613,66.9291,21.3578,37.7792,34.3506,29.4864,21.0304,159.355,101.987,47.8065,44.6194},
	{16.931,38.1104,38.9294,32.1901,32.8703,165.859,94.5396,61.3678,69.6608,22.2296,39.3212,35.7526,30.6899,21.8888,165.859,106.15,49.7577,46.4405},
	{17.5949,39.6049,40.456,33.4524,34.1593,172.363,98.2469,63.7743,72.3925,23.1013,40.8631,37.1546,31.8934,22.7471,172.363,110.312,51.7089,48.2616},
	{18.259,41.0996,41.9828,34.7149,35.4485,178.868,101.955,66.1812,75.1246,23.9731,42.4053,38.5568,33.097,23.6056,178.868,114.476,53.6604,50.083},
	{19.2549,43.3413,44.2727,36.6084,37.3819,188.624,107.516,69.7909,79.2221,25.2807,44.7182,40.6598,34.9022,24.8931,188.624,120.719,56.5872,52.8147},
	{20.5828,46.3304,47.3261,39.1332,39.9601,201.633,114.931,74.6042,84.6859,27.0242,47.8023,43.464,37.3094,26.61,201.633,129.045,60.4899,56.4572},
	{21.9107,49.3194,50.3792,41.6578,42.538,214.641,122.345,79.4172,90.1492,28.7676,50.8862,46.268,39.7163,28.3266,214.641,137.37,64.3923,60.0995},
	{23.2386,52.3085,53.4326,44.1826,45.1162,227.65,129.76,84.2305,95.613,30.5112,53.9704,49.0722,42.1234,30.0435,227.65,145.696,68.295,63.742},
	{24.5665,55.2974,56.4858,46.7072,47.6941,240.658,137.175,89.0435,101.076,32.2546,57.0542,51.8762,44.5304,31.7602,240.658,154.021,72.1974,67.3842},
	{25.8945,58.2866,59.5392,49.232,50.2723,253.667,144.59,93.8568,106.54,33.9982,60.1384,54.6805,46.9375,33.477,253.667,162.347,76.1001,71.0268},
	{27.2223,61.2755,62.5924,51.7566,52.8502,266.675,152.005,98.6698,112.004,35.7416,63.2222,57.4845,49.3445,35.1937,266.675,170.672,80.0025,74.669},
	{28.5503,64.2647,65.6458,54.2814,55.4284,279.684,159.42,103.483,117.467,37.4852,66.3064,60.2887,51.7516,36.9105,279.684,178.998,83.9052,78.3115},
	{29.8782,67.2536,68.6989,56.806,58.0063,292.692,166.834,108.296,122.931,39.2286,69.3902,63.0927,54.1586,38.6272,292.692,187.323,87.8076,81.9538},
	{31.2061,70.2428,71.7523,59.3308,60.5845,305.701,174.25,113.109,128.394,40.9721,72.4744,65.8969,56.5657,40.344,305.701,195.649,91.7103,85.5963},
	{32.5341,73.2319,74.8057,61.8556,63.1626,318.71,181.665,117.923,133.858,42.7157,75.5585,68.7011,58.9728,42.0609,318.71,203.974,95.613,89.2388},
	{33.862,76.2208,77.8589,64.3802,65.7406,331.718,189.079,122.736,139.322,44.4591,78.6424,71.5051,61.3798,43.7776,331.718,212.3,99.5154,92.881},
	{35.1899,79.21,80.9123,66.905,68.3188,344.727,196.494,127.549,144.785,46.2027,81.7265,74.3094,63.7869,45.4944,344.727,220.625,103.418,96.5236},
	{36.5178,82.1989,83.9654,69.4296,70.8967,357.735,203.909,132.362,150.249,47.9461,84.8104,77.1134,66.1939,47.2111,357.735,228.95,107.32,100.166},
	{37.8458,85.1881,87.0188,71.9544,73.4749,370.744,211.324,137.175,155.712,49.6896,87.8945,79.9176,68.601,48.9279,370.744,237.276,111.223,103.808},
	{39.1736,88.177,90.072,74.479,76.0528,383.752,218.739,141.988,161.176,51.4331,90.9784,82.7216,71.0079,50.6446,383.752,245.601,115.126,107.451},
	{40.5016,91.1662,93.1254,77.0039,78.631,396.761,226.154,146.802,166.64,53.1766,94.0625,85.5258,73.4151,52.3614,396.761,253.927,119.028,111.093},
	{41.8295,94.1551,96.1785,79.5285,81.2089,409.769,233.568,151.615,172.103,54.92,97.1464,88.3298,75.822,54.0781,409.769,262.252,122.931,114.735},
	{43.1574,97.1442,99.2319,82.0533,83.7871,422.778,240.983,156.428,177.567,56.6636,100.231,91.134,78.2292,55.7949,422.778,270.578,126.833,118.378},
	{44.4854,100.133,102.285,84.5781,86.3652,435.787,248.399,161.241,183.031,58.4071,103.315,93.9382,80.6363,57.5118,435.787,278.904,130.736,122.02},
	{45.8133,103.122,105.338,87.1027,88.9432,448.795,255.813,166.054,188.494,60.1506,106.399,96.7423,83.0432,59.2285,448.795,287.229,134.638,125.663},
	{47.8052,107.606,109.918,90.8898,92.8103,468.308,266.936,173.274,196.689,62.7658,111.025,100.948,86.6538,61.8036,468.308,299.717,140.492,131.126},
	{50.461,113.584,116.025,95.9392,97.9664,494.325,281.765,182.9,207.616,66.2528,117.193,106.557,91.4679,65.2372,494.325,316.368,148.297,138.411},
	{53.1168,119.562,122.132,100.989,103.123,520.342,296.595,192.527,218.544,69.7398,123.361,112.165,96.282,68.6707,520.342,333.019,156.103,145.696},
	{55.7727,125.54,128.238,106.038,108.279,546.359,311.425,202.153,229.471,73.2267,129.529,117.773,101.096,72.1042,546.359,349.67,163.908,152.981},
	{58.4285,131.518,134.345,111.087,113.435,572.376,326.254,211.779,240.398,76.7137,135.697,123.381,105.91,75.5377,572.376,366.321,171.713,160.265},
	{61.0843,137.496,140.451,116.137,118.591,598.393,341.084,221.405,251.325,80.2007,141.865,128.99,110.724,78.9712,598.393,382.972,179.518,167.55},
	{63.7403,143.475,146.558,121.186,123.747,624.411,355.914,231.032,262.253,83.6878,148.033,134.598,115.539,82.4049,624.411,399.623,187.323,174.835},
	{58.0483,130.663,133.471,110.365,112.697,568.652,324.132,210.401,238.834,76.2146,134.814,122.579,105.221,75.0463,568.652,363.937,170.596,159.223},
	{60.6735,136.572,139.507,115.356,117.793,594.369,338.79,219.917,249.635,79.6614,140.911,128.122,109.98,78.4402,594.369,380.396,178.311,166.423},
	{63.2989,142.481,145.543,120.347,122.89,620.087,353.45,229.432,260.437,83.1083,147.008,133.666,114.738,81.8342,620.087,396.856,186.026,173.624},
	{65.9242,148.39,151.579,125.339,127.987,645.805,368.109,238.948,271.238,86.5552,153.105,139.21,119.497,85.2283,645.805,413.315,193.741,180.825},
	{68.5495,154.3,157.616,130.33,133.084,671.523,382.768,248.464,282.04,90.0021,159.202,144.754,124.256,88.6224,671.523,429.775,201.457,188.026},
	{71.1747,160.209,163.652,135.321,138.181,697.24,397.427,257.979,292.841,93.4488,165.299,150.297,129.015,92.0163,697.24,446.234,209.172,195.227},
	{73.8,166.118,169.688,140.313,143.277,722.958,412.086,267.494,303.642,96.8957,171.396,155.841,133.773,95.4104,722.958,462.693,216.887,202.428},
	{76.4253,172.028,175.725,145.304,148.374,748.676,426.745,277.01,314.444,100.343,177.493,161.385,138.532,98.8044,748.676,479.153,224.603,209.629},
	{79.0505,177.937,181.761,150.295,153.471,774.393,441.404,286.525,325.245,103.789,183.59,166.928,143.291,102.198,774.393,495.612,232.318,216.83},
	{81.6758,183.846,187.797,155.287,158.568,800.111,456.063,296.041,336.047,107.236,189.687,172.472,148.049,105.592,800.111,512.071,240.033,224.031},
	{84.3011,189.756,193.834,160.278,163.665,825.829,470.723,305.557,346.848,110.683,195.784,178.016,152.808,108.986,825.829,528.531,247.749,231.232},
	{86.9263,195.665,199.87,165.269,168.761,851.546,485.381,315.072,357.649,114.13,201.881,183.559,157.567,112.38,851.546,544.989,255.464,238.433},
	{89.5516,201.574,205.906,170.26,173.858,877.264,500.04,324.588,368.451,117.577,207.978,189.103,162.325,115.774,877.264,561.449,263.179,245.634},
	{92.1769,207.484,211.943,175.252,178.955,902.982,514.7,334.103,379.252,121.024,214.075,194.647,167.084,119.169,902.982,577.908,270.895,252.835},
	{94.8022,213.393,217.979,180.243,184.052,928.699,529.358,343.619,390.054,124.471,220.172,200.19,171.843,122.562,928.699,594.367,278.61,260.036},
	{97.4275,219.302,224.015,185.234,189.148,954.417,544.018,353.134,400.855,127.917,226.269,205.734,176.602,125.957,954.417,610.827,286.325,267.237},
	{101.365,228.166,233.07,192.721,196.794,992.994,566.007,367.408,417.057,133.088,235.415,214.05,183.74,131.048,992.994,635.516,297.898,278.038},
	{106.616,239.985,245.142,202.704,206.987,1044.43,595.325,386.439,438.661,139.982,247.609,225.137,193.257,137.836,1044.43,668.435,313.329,292.44},
	{111.866,251.802,257.214,212.686,217.18,1095.86,624.64,405.468,460.261,146.875,259.802,236.224,202.774,144.623,1095.86,701.35,328.758,306.841},
	{117.117,263.622,269.287,222.669,227.374,1147.3,653.961,424.501,481.866,153.769,271.997,247.312,212.292,151.412,1147.3,734.272,344.19,321.244},
	{122.367,275.439,281.359,232.651,237.567,1198.73,683.276,443.53,503.467,160.662,284.19,258.398,221.808,158.199,1198.73,767.187,359.619,335.644},
	{127.618,287.259,293.432,242.634,247.761,1250.17,712.597,462.563,525.071,167.556,296.385,269.487,231.326,164.988,1250.17,800.109,375.051,350.048},
	{132.869,299.079,305.506,252.618,257.956,1301.61,741.918,481.596,546.676,174.451,308.58,280.575,240.845,171.776,1301.61,833.03,390.483,364.451},
	{138.119,310.896,317.577,262.6,268.148,1353.04,771.233,500.625,568.277,181.344,320.773,291.661,250.361,178.564,1353.04,865.946,405.912,378.851},
	{143.37,322.716,329.651,272.583,278.343,1404.48,800.554,519.658,589.882,188.238,332.969,302.75,259.879,185.352,1404.48,898.867,421.344,393.254},
	{148.62,334.533,341.722,282.565,288.535,1455.91,829.869,538.687,611.482,195.131,345.161,313.836,269.396,192.14,1455.91,931.782,436.773,407.655},
	{153.871,346.353,353.796,292.548,298.73,1507.35,859.189,557.719,633.087,202.025,357.357,324.924,278.914,198.928,1507.35,964.704,452.205,422.058},
	{159.121,358.17,365.867,302.53,308.922,1558.78,888.505,576.749,654.688,208.918,369.549,336.011,288.43,205.716,1558.78,997.619,467.634,436.458},
	{164.372,369.99,377.941,312.513,319.117,1610.22,917.825,595.781,676.292,215.813,381.745,347.099,297.949,212.504,1610.22,1030.54,483.066,450.862},
	{169.622,381.807,390.013,322.495,329.309,1661.65,947.14,614.811,697.893,222.706,393.937,358.185,307.465,219.292,1661.65,1063.46,498.495,465.262},
	{174.873,393.627,402.086,332.479,339.504,1713.09,976.461,633.843,719.498,229.6,406.133,369.274,316.983,226.08,1713.09,1096.38,513.927,479.665},
	{180.123,405.444,414.158,342.46,349.696,1764.52,1005.78,652.872,741.098,236.493,418.325,380.36,326.5,232.868,1764.52,1129.29,529.356,494.066},
	{185.374,417.264,426.231,352.444,359.891,1815.96,1035.1,671.905,762.703,243.387,430.521,391.448,336.018,239.656,1815.96,1162.21,544.788,508.469},
	{190.624,429.081,438.303,362.425,370.083,1867.39,1064.41,690.934,784.304,250.28,442.713,402.535,345.534,246.444,1867.39,1195.13,560.217,522.869},
	{195.875,440.901,450.376,372.409,380.278,1918.83,1093.73,709.967,805.909,257.175,454.909,413.623,355.053,253.232,1918.83,1228.05,575.649,537.272},
	{201.126,452.721,462.45,382.392,390.472,1970.27,1123.05,729,827.513,264.069,467.104,424.711,364.571,260.021,1970.27,1260.97,591.081,551.676},
	{209.002,470.448,480.558,397.366,405.762,2047.42,1167.03,757.545,859.916,274.409,485.394,441.342,378.846,270.203,2047.42,1310.35,614.226,573.278},
	{219.503,494.085,504.703,417.331,426.149,2150.29,1225.67,795.607,903.122,288.196,509.782,463.517,397.881,283.779,2150.29,1376.19,645.087,602.081},
	{230.004,517.722,528.848,437.296,446.536,2253.16,1284.3,833.669,946.327,301.984,534.17,485.691,416.916,297.354,2253.16,1442.02,675.948,630.885},
	{240.505,541.359,552.993,457.261,466.923,2356.03,1342.94,871.731,989.533,315.771,558.558,507.866,435.95,310.93,2356.03,1507.86,706.809,659.688},
	{251.006,564.996,577.138,477.226,487.31,2458.9,1401.57,909.793,1032.74,329.559,582.946,530.04,454.985,324.506,2458.9,1573.7,737.67,688.492},
	{261.507,588.633,601.283,497.191,507.697,2561.77,1460.21,947.855,1075.94,343.346,607.334,552.215,474.02,338.082,2561.77,1639.53,768.531,717.296},
	{272.008,612.27,625.428,517.157,528.084,2664.64,1518.84,985.917,1119.15,357.133,631.722,574.39,493.054,351.658,2664.64,1705.37,799.392,746.099},
	{282.509,635.907,649.573,537.122,548.471,2767.51,1577.48,1023.98,1162.35,370.921,656.11,596.564,512.089,365.234,2767.51,1771.21,830.253,774.903},
	{293.01,659.544,673.718,557.087,568.858,2870.38,1636.12,1062.04,1205.56,384.708,680.498,618.739,531.124,378.81,2870.38,1837.04,861.114,803.706},
	{303.512,683.184,697.866,577.054,589.247,2973.26,1694.76,1100.11,1248.77,398.497,704.889,640.916,550.16,392.388,2973.26,1902.89,891.978,832.513},
	{314.013,706.821,722.011,597.019,609.634,3076.13,1753.39,1138.17,1291.97,412.284,729.277,663.091,569.195,405.964,3076.13,1968.72,922.839,861.316},
	{324.514,730.458,746.156,616.984,630.021,3179,1812.03,1176.23,1335.18,426.071,753.665,685.265,588.229,419.54,3179,2034.56,953.7,890.12},
	{335.015,754.095,770.301,636.949,650.408,3281.87,1870.67,1214.29,1378.39,439.859,778.053,707.44,607.264,433.116,3281.87,2100.4,984.561,918.924},
	{345.516,777.732,794.446,656.914,670.795,3384.74,1929.3,1252.35,1421.59,453.646,802.441,729.615,626.299,446.692,3384.74,2166.23,1015.42,947.727},
	{356.017,801.369,818.591,676.88,691.182,3487.61,1987.94,1290.42,1464.8,467.433,826.829,751.789,645.333,460.268,3487.61,2232.07,1046.28,976.531},
	{366.518,825.006,842.736,696.845,711.569,3590.48,2046.57,1328.48,1508,481.221,851.217,773.964,664.368,473.844,3590.48,2297.91,1077.14,1005.33},
	{377.019,848.643,866.881,716.81,731.956,3693.35,2105.21,1366.54,1551.21,495.008,875.605,796.139,683.403,487.42,3693.35,2363.74,1108,1034.14},
	{387.52,872.28,891.026,736.775,752.343,3796.22,2163.85,1404.6,1594.41,508.795,899.993,818.313,702.437,500.996,3796.22,2429.58,1138.87,1062.94},
	{398.021,895.917,915.171,756.74,772.73,3899.09,2222.48,1442.66,1637.62,522.583,924.381,840.488,721.472,514.571,3899.09,2495.42,1169.73,1091.75},
	{408.522,919.554,939.316,776.705,793.117,4001.96,2281.12,1480.73,1680.82,536.37,948.769,862.663,740.507,528.147,4001.96,2561.25,1200.59,1120.55},
	{419.024,943.191,963.461,796.67,813.504,4104.83,2339.75,1518.79,1724.03,550.157,973.157,884.837,759.541,541.723,4104.83,2627.09,1231.45,1149.35},
	{434.776,978.648,999.68,826.619,844.086,4259.14,2427.71,1575.88,1788.84,570.839,1009.74,918.1,788.094,562.088,4259.14,2725.85,1277.74,1192.56},
	{455.778,1025.92,1047.97,866.549,884.86,4464.88,2544.98,1652.01,1875.25,598.414,1058.52,962.45,826.164,589.24,4464.88,2857.52,1339.46,1250.17},
	{476.78,1073.2,1096.26,906.48,925.634,4670.62,2662.25,1728.13,1961.66,625.988,1107.29,1006.8,864.233,616.392,4670.62,2989.2,1401.19,1307.77},
	{497.782,1120.47,1144.55,946.41,966.408,4876.36,2779.53,1804.25,2048.07,653.563,1156.07,1051.15,902.302,643.544,4876.36,3120.87,1462.91,1365.38},
	{518.785,1167.75,1192.84,986.342,1007.18,5082.11,2896.8,1880.38,2134.49,681.139,1204.85,1095.5,940.373,670.697,5082.11,3252.55,1524.63,1422.99},
	{539.787,1215.02,1241.13,1026.27,1047.96,5287.85,3014.07,1956.5,2220.9,708.714,1253.62,1139.85,978.443,697.849,5287.85,3384.22,1586.36,1480.6},
	{560.789,1262.3,1289.42,1066.2,1088.73,5493.59,3131.35,2032.63,2307.31,736.288,1302.4,1184.2,1016.51,725.001,5493.59,3515.9,1648.08,1538.21},
	{510.004,1147.98,1172.65,969.647,990.136,4996.09,2847.77,1848.55,2098.36,669.61,1184.45,1076.96,924.457,659.345,4996.09,3197.5,1498.83,1398.91},
	{530.903,1195.02,1220.71,1009.38,1030.71,5200.82,2964.47,1924.3,2184.34,697.049,1232.99,1121.09,962.339,686.364,5200.82,3328.52,1560.25,1456.23},
	{551.802,1242.07,1268.76,1049.12,1071.28,5405.55,3081.16,2000.05,2270.33,724.489,1281.53,1165.22,1000.22,713.382,5405.55,3459.55,1621.66,1513.55},
	{572.7,1289.11,1316.81,1088.85,1111.86,5610.27,3197.85,2075.8,2356.31,751.927,1330.06,1209.35,1038.1,740.4,5610.27,3590.57,1683.08,1570.88},
	{593.599,1336.15,1364.86,1128.58,1152.43,5815,3314.55,2151.55,2442.3,779.366,1378.6,1253.48,1075.98,767.418,5815,3721.6,1744.5,1628.2},
	{614.498,1383.19,1412.91,1168.32,1193,6019.73,3431.25,2227.3,2528.29,806.805,1427.13,1297.61,1113.87,794.437,6019.73,3852.63,1805.92,1685.52},
	{635.397,1430.23,1460.97,1208.05,1233.58,6224.46,3547.94,2303.05,2614.27,834.244,1475.67,1341.74,1151.75,821.456,6224.46,3983.65,1867.34,1742.85},
	{656.296,1477.27,1509.02,1247.78,1274.15,6429.19,3664.64,2378.8,2700.26,861.684,1524.21,1385.88,1189.63,848.474,6429.19,4114.68,1928.76,1800.17},
	{677.194,1524.31,1557.07,1287.52,1314.72,6633.91,3781.33,2454.55,2786.24,889.122,1572.74,1430.01,1227.51,875.492,6633.91,4245.7,1990.17,1857.49},
	{698.092,1571.36,1605.12,1327.25,1355.3,6838.64,3898.02,2530.3,2872.23,916.561,1621.28,1474.14,1265.39,902.51,6838.64,4376.73,2051.59,1914.82},
	{718.991,1618.4,1653.18,1366.99,1395.87,7043.37,4014.72,2606.05,2958.22,944,1669.81,1518.27,1303.28,929.529,7043.37,4507.76,2113.01,1972.14},
	{739.89,1665.44,1701.23,1406.72,1436.44,7248.1,4131.42,2681.8,3044.2,971.44,1718.35,1562.4,1341.16,956.548,7248.1,4638.78,2174.43,2029.47},
	{760.789,1712.48,1749.28,1446.45,1477.02,7452.83,4248.11,2757.55,3130.19,998.879,1766.89,1606.53,1379.04,983.566,7452.83,4769.81,2235.85,2086.79},
	{781.687,1759.52,1797.33,1486.19,1517.59,7657.55,4364.8,2833.29,3216.17,1026.32,1815.42,1650.66,1416.92,1010.58,7657.55,4900.83,2297.26,2144.11},
	{802.586,1806.56,1845.39,1525.92,1558.16,7862.28,4481.5,2909.04,3302.16,1053.76,1863.96,1694.79,1454.8,1037.6,7862.28,5031.86,2358.68,2201.44},
	{823.485,1853.61,1893.44,1565.66,1598.74,8067.01,4598.2,2984.79,3388.14,1081.2,1912.49,1738.92,1492.69,1064.62,8067.01,5162.89,2420.1,2258.76},
	{854.833,1924.17,1965.52,1625.26,1659.6,8374.1,4773.24,3098.42,3517.12,1122.35,1985.3,1805.12,1549.51,1105.15,8374.1,5359.42,2512.23,2344.75},
	{896.631,2018.25,2061.62,1704.72,1740.75,8783.56,5006.63,3249.92,3689.1,1177.23,2082.37,1893.38,1625.27,1159.19,8783.56,5621.48,2635.07,2459.4},
	{938.428,2112.33,2157.73,1784.19,1821.89,9193.01,5240.02,3401.41,3861.06,1232.11,2179.44,1981.65,1701.04,1213.22,9193.01,5883.53,2757.9,2574.04},
	{980.226,2206.42,2253.83,1863.66,1903.04,9602.47,5473.41,3552.91,4033.04,1286.99,2276.52,2069.91,1776.8,1267.26,9602.47,6145.58,2880.74,2688.69},
	{1022.02,2300.49,2349.93,1943.12,1984.18,10011.9,5706.78,3704.4,4205,1341.86,2373.58,2158.17,1852.56,1321.29,10011.9,6407.62,3003.57,2803.33},
	{1063.82,2394.59,2446.05,2022.6,2065.34,10421.4,5940.2,3855.92,4376.99,1396.75,2470.66,2246.44,1928.33,1375.34,10421.4,6669.7,3126.42,2917.99},
	{1105.61,2488.66,2542.14,2102.05,2146.47,10830.8,6173.56,4007.4,4548.94,1451.62,2567.72,2334.69,2004.09,1429.36,10830.8,6931.71,3249.24,3032.62},
	{1147.42,2582.75,2638.26,2181.53,2227.63,11240.3,6406.97,4158.91,4720.93,1506.5,2664.81,2422.96,2079.86,1483.41,11240.3,7193.79,3372.09,3147.28},
	{1189.21,2676.82,2734.35,2260.99,2308.76,11649.7,6640.33,4310.39,4892.87,1561.37,2761.86,2511.21,2155.61,1537.44,11649.7,7455.81,3494.91,3261.92},
	{1231.01,2770.91,2830.46,2340.46,2389.92,12059.2,6873.74,4461.9,5064.86,1616.26,2858.95,2599.48,2231.39,1591.48,12059.2,7717.89,3617.76,3376.58},
	{1272.81,2865.01,2926.58,2419.94,2471.07,12468.7,7107.16,4613.42,5236.85,1671.14,2956.03,2687.75,2307.16,1645.52,12468.7,7979.97,3740.61,3491.24},
	{1314.6,2959.08,3022.67,2499.4,2552.21,12878.1,7340.52,4764.9,5408.8,1726.01,3053.09,2776,2382.91,1699.55,12878.1,8241.98,3863.43,3605.87},
	{1356.41,3053.17,3118.79,2578.87,2633.37,13287.6,7573.93,4916.41,5580.79,1780.89,3150.17,2864.28,2458.68,1753.59,13287.6,8504.06,3986.28,3720.53},
	{1398.2,3147.24,3214.88,2658.33,2714.5,13697,7807.29,5067.89,5752.74,1835.77,3247.23,2952.53,2534.44,1807.62,13697,8766.08,4109.1,3835.16},
	{1440,3241.34,3310.99,2737.81,2795.66,14106.5,8040.7,5219.4,5924.73,1890.65,3344.31,3040.8,2610.21,1861.67,14106.5,9028.16,4231.95,3949.82},
	{1481.79,3335.41,3407.09,2817.26,2876.79,14515.9,8274.06,5370.88,6096.68,1945.52,3441.37,3129.05,2685.96,1915.7,14515.9,9290.18,4354.77,4064.45},
	{1523.59,3429.5,3503.2,2896.74,2957.95,14925.4,8507.48,5522.4,6268.67,2000.4,3538.45,3217.32,2761.74,1969.74,14925.4,9552.26,4477.62,4179.11},
	{1565.4,3523.59,3599.32,2976.22,3039.1,15334.9,8740.89,5673.91,6440.66,2055.29,3635.54,3305.59,2837.51,2023.78,15334.9,9814.34,4600.47,4293.77},
	{1607.19,3617.66,3695.41,3055.67,3120.24,15744.3,8974.25,5825.39,6612.61,2110.16,3732.6,3393.84,2913.26,2077.81,15744.3,10076.4,4723.29,4408.4},
	{1648.99,3711.76,3791.52,3135.15,3201.4,16153.8,9207.67,5976.91,6784.6,2165.04,3829.68,3482.11,2989.03,2131.85,16153.8,10338.4,4846.14,4523.06},
	{1711.68,3852.86,3935.66,3254.33,3323.1,16767.9,9557.7,6204.12,7042.52,2247.35,3975.27,3614.49,3102.67,2212.9,16767.9,10731.5,5030.37,4695.01},
	{1795.28,4041.05,4127.89,3413.29,3485.41,17586.9,10024.5,6507.15,7386.5,2357.12,4169.43,3791.03,3254.21,2320.98,17586.9,11255.6,5276.07,4924.33},
	{1878.88,4229.21,4320.1,3572.22,3647.7,18405.8,10491.3,6810.15,7730.44,2466.87,4363.57,3967.55,3405.74,2429.05,18405.8,11779.7,5521.74,5153.62},
	{1962.47,4417.37,4512.31,3731.15,3809.99,19224.7,10958.1,7113.14,8074.37,2576.63,4557.72,4144.08,3557.26,2537.13,19224.7,12303.8,5767.41,5382.92},
	{2046.06,4605.54,4704.51,3890.09,3972.28,20043.6,11424.9,7416.13,8418.31,2686.38,4751.86,4320.6,3708.79,2645.2,20043.6,12827.9,6013.08,5612.21},
	{2129.66,4793.7,4896.72,4049.02,4134.58,20862.5,11891.6,7719.12,8762.25,2796.13,4946,4497.12,3860.31,2753.27,20862.5,13352,6258.75,5841.5},
	{2213.25,4981.87,5088.93,4207.95,4296.87,21681.4,12358.4,8022.12,9106.19,2905.89,5140.14,4673.64,4011.84,2861.34,21681.4,13876.1,6504.42,6070.79},
	{2296.84,5170.03,5281.14,4366.89,4459.16,22500.3,12825.2,8325.11,9450.13,3015.64,5334.28,4850.16,4163.37,2969.41,22500.3,14400.2,6750.09,6300.08},
	{2380.44,5358.19,5473.34,4525.82,4621.45,23319.2,13291.9,8628.1,9794.06,3125.4,5528.42,5026.69,4314.89,3077.49,23319.2,14924.3,6995.76,6529.38},
	{2464.04,5546.38,5665.57,4684.77,4783.76,24138.2,13758.8,8931.13,10138,3235.17,5722.59,5203.23,4466.44,3185.57,24138.2,15448.4,7241.46,6758.7},
	{2547.64,5734.54,5857.78,4843.7,4946.05,24957.1,14225.5,9234.13,10482,3344.92,5916.73,5379.75,4617.96,3293.64,24957.1,15972.5,7487.13,6987.99},
	{2631.23,5922.71,6049.99,5002.64,5108.34,25776,14692.3,9537.12,10825.9,3454.67,6110.87,5556.27,4769.49,3401.72,25776,16496.6,7732.8,7217.28},
	{2714.82,6110.87,6242.2,5161.57,5270.64,26594.9,15159.1,9840.11,11169.9,3564.43,6305.01,5732.8,4921.01,3509.79,26594.9,17020.7,7978.47,7446.57},
	{2798.42,6299.03,6434.4,5320.5,5432.93,27413.8,15625.9,10143.1,11513.8,3674.18,6499.15,5909.32,5072.54,3617.86,27413.8,17544.8,8224.14,7675.86},
	{2882.01,6487.2,6626.61,5479.44,5595.22,28232.7,16092.6,10446.1,11857.7,3783.94,6693.3,6085.84,5224.07,3725.93,28232.7,18068.9,8469.81,7905.16},
	{2965.6,6675.36,6818.82,5638.37,5757.51,29051.6,16559.4,10749.1,12201.7,3893.69,6887.44,6262.36,5375.59,3834,29051.6,18593,8715.48,8134.45},
	{3049.2,6863.52,7011.02,5797.3,5919.8,29870.5,17026.2,11052.1,12545.6,4003.45,7081.58,6438.89,5527.12,3942.08,29870.5,19117.1,8961.15,8363.74},
	{3132.79,7051.69,7203.23,5956.24,6082.09,30689.4,17493,11355.1,12889.5,4113.2,7275.72,6615.41,5678.64,4050.15,30689.4,19641.2,9206.82,8593.03},
	{3216.4,7239.87,7395.46,6115.19,6244.4,31508.4,17959.8,11658.1,13233.5,4222.97,7469.89,6791.95,5830.19,4158.23,31508.4,20165.4,9452.52,8822.35},
	{3299.99,7428.04,7587.67,6274.12,6406.7,32327.3,18426.6,11961.1,13577.5,4332.72,7664.03,6968.47,5981.71,4266.3,32327.3,20689.5,9698.19,9051.64},
	{3383.58,7616.2,7779.88,6433.05,6568.99,33146.2,18893.3,12264.1,13921.4,4442.48,7858.17,7144.99,6133.24,4374.38,33146.2,21213.6,9943.86,9280.94},
	{3508.98,7898.46,8068.2,6671.46,6812.43,34374.6,19593.5,12718.6,14437.3,4607.12,8149.39,7409.79,6360.54,4536.49,34374.6,21999.7,10312.4,9624.89},
	{3676.17,8274.79,8452.61,6989.33,7137.02,36012.4,20527.1,13324.6,15125.2,4826.63,8537.68,7762.83,6663.59,4752.64,36012.4,23047.9,10803.7,10083.5},
	{3843.36,8651.11,8837.03,7307.2,7461.6,37650.2,21460.6,13930.6,15813.1,5046.14,8925.96,8115.88,6966.64,4968.78,37650.2,24096.1,11295.1,10542.1},
	{4010.54,9027.44,9221.44,7625.06,7786.18,39288,22394.2,14536.6,16501,5265.64,9314.24,8468.92,7269.69,5184.92,39288,25144.3,11786.4,11000.6},
	{4177.73,9403.77,9605.86,7942.93,8110.77,40925.8,23327.7,15142.5,17188.8,5485.15,9702.53,8821.97,7572.75,5401.07,40925.8,26192.5,12277.7,11459.2},
	{4344.93,9780.12,9990.3,8260.81,8435.37,42563.7,24261.3,15748.6,17876.8,5704.68,10090.8,9175.03,7875.82,5617.23,42563.7,27240.8,12769.1,11917.8},
	{4512.12,10156.4,10374.7,8578.68,8759.95,44201.5,25194.9,16354.6,18564.6,5924.19,10479.1,9528.08,8178.87,5833.37,44201.5,28289,13260.4,12376.4},
	{4198.04,9449.49,9652.57,7981.55,8150.2,41124.8,23441.1,15216.2,17272.4,5511.83,9749.7,8864.86,7609.57,5427.33,41124.8,26319.9,12337.4,11514.9},
	{4362.28,9819.18,10030.2,8293.81,8469.06,42733.7,24358.2,15811.5,17948.2,5727.46,10131.1,9211.68,7907.27,5639.66,42733.7,27349.6,12820.1,11965.4},
	{4526.51,10188.8,10407.8,8606.05,8787.89,44342.5,25275.2,16406.7,18623.8,5943.08,10512.5,9558.47,8204.96,5851.98,44342.5,28379.2,13302.8,12415.9},
	{4690.75,10558.5,10785.4,8918.3,9106.75,45951.4,26192.3,17002,19299.6,6158.72,10894,9905.28,8502.66,6064.31,45951.4,29408.9,13785.4,12866.4},
	{4854.97,10928.2,11163,9230.54,9425.59,47560.2,27109.3,17597.3,19975.3,6374.34,11275.4,10252.1,8800.35,6276.62,47560.2,30438.5,14268.1,13316.9},
	{5019.21,11297.9,11540.7,9542.8,9744.44,49169.1,28026.4,18192.6,20651,6589.98,11656.8,10598.9,9098.05,6488.95,49169.1,31468.2,14750.7,13767.3},
	{5183.44,11667.5,11918.3,9855.04,10063.3,50777.9,28943.4,18787.8,21326.7,6805.6,12038.2,10945.7,9395.74,6701.27,50777.9,32497.9,15233.4,14217.8},
	{5347.68,12037.2,12295.9,10167.3,10382.1,52386.8,29860.5,19383.1,22002.5,7021.24,12419.7,11292.5,9693.44,6913.6,52386.8,33527.6,15716,14668.3},
	{5511.9,12406.9,12673.5,10479.5,10701,53995.6,30777.5,19978.4,22678.2,7236.86,12801.1,11639.3,9991.13,7125.92,53995.6,34557.2,16198.7,15118.8},
	{5676.13,12776.6,13051.1,10791.8,11019.8,55604.4,31694.5,20573.6,23353.8,7452.48,13182.5,11986.1,10288.8,7338.24,55604.4,35586.8,16681.3,15569.2},
	{5840.37,13146.2,13428.8,11104,11338.7,57213.3,32611.6,21168.9,24029.6,7668.12,13563.9,12332.9,10586.5,7550.57,57213.3,36616.5,17164,16019.7},
	{6004.6,13515.9,13806.4,11416.3,11657.5,58822.1,33528.6,21764.2,24705.3,7883.74,13945.3,12679.7,10884.2,7762.88,58822.1,37646.1,17646.6,16470.2},
	{6168.83,13885.6,14184,11728.5,11976.3,60431,34445.7,22359.5,25381,8099.37,14326.7,13026.5,11181.9,7975.21,60431,38675.8,18129.3,16920.7},
	{6333.06,14255.3,14561.6,12040.8,12295.2,62039.8,35362.7,22954.7,26056.7,8315,14708.1,13373.3,11479.6,8187.53,62039.8,39705.5,18611.9,17371.1},
	{6497.3,14624.9,14939.2,12353,12614,63648.7,36279.8,23550,26732.5,8530.63,15089.6,13720.1,11777.3,8399.86,63648.7,40735.2,19094.6,17821.6},
	{6661.52,14994.6,15316.8,12665.3,12932.9,65257.5,37196.8,24145.3,27408.1,8746.25,15471,14066.9,12075,8612.18,65257.5,41764.8,19577.2,18272.1},
	{6907.88,15549.1,15883.3,13133.6,13411.1,67670.8,38572.4,25038.2,28421.7,9069.7,16043.1,14587.1,12521.5,8930.66,67670.8,43309.3,20301.2,18947.8},
	{7236.34,16288.5,16638.5,13758.1,14048.8,70888.5,40406.4,26228.7,29773.2,9500.96,16806,15280.7,13116.9,9355.31,70888.5,45368.6,21266.5,19848.8},
	{7564.81,17027.8,17393.8,14382.6,14686.5,74106.2,42240.5,27419.3,31124.6,9932.22,17568.8,15974.3,13712.3,9779.96,74106.2,47428,22231.9,20749.7},
	{7893.27,17767.2,18149,15007.1,15324.2,77323.9,44074.6,28609.8,32476,10363.5,18331.6,16667.9,14307.7,10204.6,77323.9,49487.3,23197.2,21650.7},
	{8221.73,18506.5,18904.2,15631.6,15961.9,80541.6,45908.7,29800.4,33827.5,10794.7,19094.5,17361.5,14903.1,10629.3,80541.6,51546.6,24162.5,22551.6},
	{8550.2,19245.9,19659.5,16256.1,16599.6,83759.3,47742.8,30990.9,35178.9,11226,19857.3,18055.2,15498.5,11053.9,83759.3,53606,25127.8,23452.6},
	{8878.66,19985.2,20414.7,16880.6,17237.3,86977,49576.9,32181.5,36530.3,11657.2,20620.2,18748.8,16093.9,11478.5,86977,55665.3,26093.1,24353.6},
	{9207.13,20724.6,21170,17505.1,17875,90194.7,51411,33372,37881.8,12088.5,21383,19442.4,16689.3,11903.2,90194.7,57724.6,27058.4,25254.5},
	{9535.59,21463.9,21925.2,18129.6,18512.7,93412.4,53245.1,34562.6,39233.2,12519.8,22145.8,20136,17284.7,12327.8,93412.4,59783.9,28023.7,26155.5},
	{9864.06,22203.3,22680.4,18754.1,19150.4,96630.1,55079.2,35753.1,40584.6,12951,22908.7,20829.6,17880,12752.5,96630.1,61843.3,28989,27056.4},
	{10192.5,22942.6,23435.7,19378.6,19788.1,99847.8,56913.2,36943.7,41936.1,13382.3,23671.5,21523.2,18475.4,13177.1,99847.8,63902.6,29954.3,27957.4},
	{10520.9,23681.9,24190.8,20003,20425.6,103065,58747,38134.1,43287.3,13813.5,24434.2,22216.7,19070.7,13601.7,103065,65961.6,30919.5,28858.2},
	{10849.4,24421.3,24946.1,20627.5,21063.4,106283,60581.3,39324.7,44638.9,14244.8,25197.1,22910.4,19666.2,14026.4,106283,68021.1,31884.9,29759.2},
	{11177.9,25160.7,25701.4,21252.1,21701.1,109501,62415.6,40515.4,45990.4,14676.1,25960.1,23604,20261.6,14451.1,109501,70080.6,32850.3,30660.3},
	{11506.4,25900.1,26456.7,21876.6,22338.9,112719,64249.8,41706,47342,15107.4,26723,24297.7,20857.1,14875.8,112719,72140.2,33815.7,31561.3},
	{11834.8,26639.3,27211.8,22501,22976.5,115936,66083.5,42896.3,48693.1,15538.5,27485.6,24991.2,21452.3,15300.3,115936,74199,34780.8,32462.1},
	{12163.3,27378.7,27967.1,23125.6,23614.2,119154,67917.8,44087,50044.7,15969.8,28248.6,25684.8,22047.8,15725,119154,76258.6,35746.2,33363.1},
	{12491.8,28118.1,28722.4,23750.1,24252,122372,69752,45277.6,51396.2,16401.1,29011.5,26378.5,22643.2,16149.7,122372,78318.1,36711.6,34264.2},
	{12820.2,28857.3,29477.5,24374.5,24889.5,125589,71585.7,46467.9,52747.4,16832.3,29774.1,27072,23238.5,16574.3,125589,80377,37676.7,35164.9},
	{13148.7,29596.8,30232.8,24999,25527.3,128807,73420,47658.6,54098.9,17263.6,30537,27765.6,23833.9,16998.9,128807,82436.5,38642.1,36066},
	{13641.4,30705.9,31365.8,25935.8,26483.9,133634,76171.4,49444.6,56126.3,17910.5,31681.4,28806.1,24727.1,17636,133634,85525.8,40090.2,37417.5},
	{14298.3,32184.5,32876.2,27184.8,27759.2,140069,79839.3,51825.5,58829,18773,33207,30193.3,25917.8,18485.2,140069,89644.2,42020.7,39219.3},
	{14955.2,33663.1,34386.5,28433.7,29034.5,146504,83507.3,54206.5,61531.7,19635.5,34732.6,31580.4,27108.5,19334.5,146504,93762.6,43951.2,41021.1},
	{15612.2,35141.9,35897.2,29682.8,30310,152940,87175.8,56587.8,64234.8,20498.1,36258.4,32967.7,28299.4,20183.8,152940,97881.6,45882,42823.2},
	{16269.1,36620.6,37407.5,30931.7,31585.3,159375,90843.7,58968.8,66937.5,21360.5,37784,34354.9,29490.1,21033.1,159375,102000,47812.5,44625},
	{16926.1,38099.4,38918.2,32180.8,32860.8,165811,94512.3,61350.1,69640.6,22223.1,39309.8,35742.2,30681,21882.4,165811,106119,49743.3,46427.1},
	{17583,39578,40428.5,33429.7,34136.1,172246,98180.2,63731,72343.3,23085.6,40835.4,37129.3,31871.7,22731.7,172246,110237,51673.8,48228.9},
	{18239.9,41056.6,41938.9,34678.6,35411.4,178681,101848,66112,75046,23948,42361,38516.5,33062.4,23580.9,178681,114356,53604.3,50030.7},
	{18896.9,42535.4,43449.6,35927.7,36686.9,185117,105517,68493.3,77749.1,24810.6,43886.8,39903.8,34253.3,24430.3,185117,118475,55535.1,51832.8},
	{19553.7,44014.1,44959.9,37176.6,37962.2,191552,109185,70874.2,80451.8,25673.1,45412.4,41290.9,35444,25279.5,191552,122593,57465.6,53634.6},
	{20210.7,45492.9,46470.6,38425.7,39237.7,197988,112853,73255.6,83155,26535.7,46938.2,42678.3,36634.9,26128.9,197988,126712,59396.4,55436.6},
	{20867.6,46971.5,47980.9,39674.7,40513,204423,116521,75636.5,85857.7,27398.2,48463.8,44065.4,37825.6,26978.2,204423,130831,61326.9,57238.4},
	{21524.5,48450.1,49491.3,40923.6,41788.3,210858,120189,78017.5,88560.4,28260.6,49989.4,45452.6,39016.3,27827.4,210858,134949,63257.4,59040.2},
	{22181.5,49928.9,51001.9,42172.7,43063.8,217294,123858,80398.8,91263.5,29123.2,51515.2,46839.9,40207.2,28676.8,217294,139068,65188.2,60842.3},
	{22838.4,51407.6,52512.3,43421.6,44339.1,223729,127526,82779.7,93966.2,29985.7,53040.8,48227,41397.9,29526,223729,143187,67118.7,62644.1},
	{23495.4,52886.4,54022.9,44670.7,45614.6,230165,131194,85161.1,96669.3,30848.3,54566.6,49614.4,42588.8,30375.4,230165,147306,69049.5,64446.2},
	{24152.3,54365,55533.3,45919.6,46889.9,236600,134862,87542,99372,31710.7,56092.2,51001.5,43779.5,31224.6,236600,151424,70980,66248},
	{24809.2,55843.6,57043.7,47168.5,48165.2,243035,138530,89922.9,102075,32573.2,57617.8,52388.6,44970.2,32073.9,243035,155542,72910.5,68049.8},
	{25466.1,57322.4,58554.3,48417.6,49440.7,249471,142198,92304.3,104778,33435.8,59143.6,53776,46161.1,32923.2,249471,159661,74841.3,69851.9},
	{26123,58801.1,60064.7,49666.5,50716,255906,145866,94685.2,107481,34298.3,60669.2,55163.1,47351.8,33772.5,255906,163780,76771.8,71653.7},
	{26780,60279.9,61575.3,50915.7,51991.5,262342,149535,97066.5,110184,35160.9,62195,56550.4,48542.7,34621.9,262342,167899,78702.6,73455.8},
	{27765.4,62497.9,63841,52789.1,53904.6,271995,155037,100638,114238,36454.6,64483.5,58631.2,50328.9,35895.8,271995,174077,81598.5,76158.6},
	{29079.2,65455.1,66861.8,55286.9,56455.2,284865,162373,105400,119643,38179.5,67534.7,61405.5,52710.3,37594.3,284865,182314,85459.5,79762.2},
	{30393.1,68412.6,69882.8,57785,59006,297736,169710,110162,125049,39904.6,70586.1,64180,55091.9,39292.9,297736,190551,89320.8,83366.1},
	{31706.9,71370,72903.8,60283,61556.8,310607,177046,114925,130455,41629.7,73637.5,66954.4,57473.5,40991.5,310607,198788,93182.1,86970},
	{33020.8,74327.5,75924.8,62781,64107.6,323478,184382,119687,135861,43354.7,76688.9,69728.9,59855.1,42690.1,323478,207026,97043.4,90573.8},
	{34334.7,77284.9,78945.8,65279,66658.4,336349,191719,124449,141267,45079.8,79740.3,72503.4,62236.7,44388.7,336349,215263,100905,94177.7},
	{35648.5,80242.1,81966.6,67776.8,69209,349219,199055,129211,146672,46804.7,82791.4,75277.6,64618.1,46087.2,349219,223500,104766,97781.3}
};

  //inputs
  Handle<QIE10DigiCollection> zdcDigiCollection;
  iEvent.getByToken(m_zdcToken, zdcDigiCollection);

  //In lieu of bxFirst, bxLast, use the number of the timeslice samples
  const QIE10DataFrame& frametest = (*zdcDigiCollection)[0];
  int nSamples = frametest.samples();
  //outputs

  EtSumBxCollection etsums(0, 0, nSamples);
  //  EtSumBxCollection etsumsP(0, 0, nSamples);
  //  EtSumBxCollection etsumsM(0, 0, nSamples);

  EtSumBxCollection etsumsReduced(0, 0, nSamples);
  //  EtSumBxCollection etsumsPReduced(0, 0, 5);
  //  EtSumBxCollection etsumsMReduced(0, 0, 5);

  //We need to reduce to 5 bunches
  const int peakBX = 4;
  const int bxRPlusMinus = 2;
  const int startBXR =  peakBX - bxRPlusMinus;
  const int endBXR = peakBX + bxRPlusMinus;
  
  //rawadc[detector index][time slices]
  unsigned short rawadc[18][10];

  int counter = 0;
  // the loop below loops over all the elements of the QIE10DigiCollection. Each entry corresponds to one channel
  for(QIE10DigiCollection::const_iterator it = zdcDigiCollection->begin(); it != zdcDigiCollection->end(); it++)
  {
    const QIE10DataFrame& frame(*it);
    HcalZDCDetId cell = frame.id();
    int zside   = cell.zside();
    int section = cell.section();
    int channel = cell.channel();
    //FIXME: removing non ZDC channels? TODO check.
    if(zside   != -1 && zside   != 1) continue;
    if(section !=  1 && section != 2) continue;
    if(section == 1 && (channel < 1 || channel > 5)) continue;
    if(section == 2 && (channel < 1 || channel > 4)) continue;
    int ihitid = (zside == 1 ? 9 : 0) + (section == 2 ? 5 : 0) + (channel - 1);
    //std::cout<<"------ channel ------ "<<channel<<std::endl;
    counter++;
    //the loop below iterates over the time slices
    for(int iTS = 0; iTS < nSamples; iTS++)
    {
      //std::cout<<" ------ iTS= "<<iTS<<std::endl;
      unsigned short adc = (unsigned short)frame[iTS].adc();
      rawadc[ihitid][iTS] = adc;
      //std::cout<<"ihitid= "<<ihitid<<" , iTS= "<<iTS<<", ADC= "<<adc<<", rawadc[ihitid][iTS] ="<<rawadc[ihitid][iTS]<<std::endl;
    } // end of loop over iTS
  } //end of loop over channels

  //std::cout<<"my counter= "<<counter<<std::endl;
  for(int ibx = 0; ibx < nSamples; ibx++){

    double cEMP = 0, cEMM = 0, cHDP = 0, cHDM = 0;
    double sumcEMP = 0, sumcEMM = 0, sumcHDP = 0, sumcHDM = 0;
    //idet=0-4 correpond to the EM channels 
    for(int idet=0; idet<5; idet++)
    {
      unsigned short EMP = rawadc[idet+9][ibx];
      unsigned short EMM = rawadc[idet][ibx];

      if(!m_doHardCodeLUT){
	int cEMP_LUTIndex = zdcLUTIndexHelper(idet+9, (int)EMP);
	int cEMM_LUTIndex = zdcLUTIndexHelper(idet, (int)EMM);

	cEMP = ((double)m_params->zdcLUT()->data(cEMP_LUTIndex))/((double)m_scaleFactor);
	cEMM = ((double)m_params->zdcLUT()->data(cEMM_LUTIndex))/((double)m_scaleFactor);
      }//Old hardcoded lut from GM - superseded by above
      else{
	cEMP = QIE10_regular_fC_full[(UChar_t)(EMP)][idet+9];
	cEMM = QIE10_regular_fC_full[(UChar_t)(EMM)][idet];
      }

      //cEMP = cEMHAD*QIE10_regular_fC[(UChar_t)(EMP)]*calibconst[1][idet];
      //cEMM = cEMHAD*QIE10_regular_fC[(UChar_t)(EMM)]*calibconst[0][idet];
      sumcEMP = sumcEMP + cEMP;
      sumcEMM = sumcEMM + cEMM;
    }
    //idet=5-8 correspond to HAD channels
    for(int idet=5; idet<9; idet++)
    {
      unsigned short HDP = rawadc[idet+9][ibx];
      unsigned short HDM = rawadc[idet][ibx];

      if(!m_doHardCodeLUT){
	int cHDP_LUTIndex = zdcLUTIndexHelper(idet+9, (int)HDP);
	int cHDM_LUTIndex = zdcLUTIndexHelper(idet, (int)HDM);
	
	cHDP = ((double)m_params->zdcLUT()->data(cHDP_LUTIndex))/((double)m_scaleFactor);
	cHDM = ((double)m_params->zdcLUT()->data(cHDM_LUTIndex))/((double)m_scaleFactor);
      }//Old hardcoded lut from GM - superseded by above
      else{
	cHDP = QIE10_regular_fC_full[(UChar_t)(HDP)][idet+9];
	cHDM = QIE10_regular_fC_full[(UChar_t)(HDM)][idet];
      }

      //cHDP = QIE10_regular_fC[(UChar_t)(HDP)]*calibconst[1][idet];
      //cHDM = QIE10_regular_fC[(UChar_t)(HDM)]*calibconst[0][idet];
      sumcHDP = sumcHDP + cHDP;
      sumcHDM = sumcHDM + cHDM;
    }
    double sumM = sumcEMM+sumcHDM;
    double sumP = sumcEMP+sumcHDP;
    //std::cout<<"bx = "<<ibx<<", sumP= "<<sumP<<", sumM= "<<sumM<<std::endl;
    if (ibx==4) {std::cout<<", sumM= "<<sumM<<std::endl; std::cout<<", sumP= "<<sumP<<std::endl;}
    l1t::EtSum tempEtM = l1t::EtSum();
    tempEtM.setHwPt(sumM);
    tempEtM.setHwEta(-1.);
    tempEtM.setHwPhi(0.);
    tempEtM.setType(EtSum::EtSumType::kZDCM);
    
    l1t::EtSum tempEtP = l1t::EtSum();
    tempEtP.setHwPt(sumP);
    tempEtP.setHwEta(1.);
    tempEtP.setHwPhi(0.);
    tempEtP.setType(EtSum::EtSumType::kZDCP);

    //One object distinguished by type
    etsums.push_back(ibx, CaloTools::etSumP4Demux(tempEtP));
    etsums.push_back(ibx, CaloTools::etSumP4Demux(tempEtM));
    //    etsumsM.push_back(ibx, CaloTools::etSumP4Demux(tempEtM));

    if(ibx >= startBXR && ibx <= endBXR){
      etsumsReduced.push_back(ibx-startBXR, CaloTools::etSumP4Demux(tempEtP));
      etsumsReduced.push_back(ibx-startBXR, CaloTools::etSumP4Demux(tempEtM));
      //      etsumsMReduced.push_back(ibx-startBXR, CaloTools::etSumP4Demux(tempEtM));
    }
  } // end of loop over bunch crossings

  
  iEvent.emplace(m_etToken, std::move(etsumsReduced));
  //  iEvent.emplace(m_etTokenM, std::move(etsumsMReduced));
}

// ------------ method called when starting to processes a run  ------------
void L1TZDCProducer::beginRun(edm::Run const& iRun, edm::EventSetup const& iSetup) 
{
  edm::ESHandle<CaloParams> candidateHandle = iSetup.getHandle(m_candidateToken);

  m_params->~CaloParamsHelper();
  m_params = new (m_params) CaloParamsHelper(*candidateHandle.product());  
  m_scaleFactor = m_params->zdcLUT()->data(0); //First position is the integer scaling factor
  std::cout << "SCALE FACTOR FOR LUT: " << m_scaleFactor << std::endl;
}

// ------------ method called when ending the processing of a run  ------------
void L1TZDCProducer::endRun(edm::Run const&, edm::EventSetup const&) {}

// LUT HELPER METHOD
int L1TZDCProducer::zdcLUTIndexHelper(int iDetPos, int iBxPos)
{
  return 1 + iDetPos*256 + iBxPos;
}



// ------------ method called when starting to processes a luminosity block  ------------
/*
void
L1TZDCProducer::beginLuminosityBlock(edm::LuminosityBlock const&, edm::EventSetup cons
t&)
{
}
*/

// ------------ method called when ending the processing of a luminosity block  ------------
/*
void
L1TZDCProducer::endLuminosityBlock(edm::LuminosityBlock const&, edm::EventSetup const&
)
{
}
*/

// ------------ method fills 'descriptions' with the allowed parameters for the module  ------------
void L1TZDCProducer::fillDescriptions(edm::ConfigurationDescriptions& descriptions) {
  //The following says we do not know what parameters are allowed so do no validation
  // Please change this to state exactly what you do use, even if it is no parameters
  edm::ParameterSetDescription desc;
  desc.setUnknown();
  descriptions.addDefault(desc);
}

//define this as a plug-in
DEFINE_FWK_MODULE(L1TZDCProducer);
